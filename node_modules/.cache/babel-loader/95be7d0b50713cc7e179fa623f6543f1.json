{"ast":null,"code":"const initialState = {\n  recipes: [],\n  allRecipes: [],\n  diets: [],\n  recipeDetail: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_RECIPES':\n      return {\n        ...state,\n        recipes: action.payload,\n        allRecipes: action.payload\n      };\n    case 'GET_RECIPE_BY_NAME':\n      return {\n        ...state,\n        recipes: action.payload\n      };\n    case 'GET_DIETS':\n      return {\n        ...state,\n        diets: action.payload\n      };\n    case 'GET_DETAIL':\n      return {\n        ...state,\n        recipeDetail: action.payload\n      };\n    case 'CLEAR_DETAIL':\n      return {\n        ...state,\n        recipeDetail: action.payload\n      };\n    case 'FILTER_BY_DIETS':\n      const allRecipes = state.allRecipes;\n      const dietsFiltered = action.payload === 'all' ? allRecipes : allRecipes.filter(e => e.diets.includes(action.payload));\n      return {\n        ...state,\n        recipes: dietsFiltered\n      };\n    case 'FILTER_BY_ORDER':\n      const filterOrder = action.payload === 'all' ? state.recipes.sort((a, b) => {\n        if (a.id > b.id) return 1;\n        if (a.id < b.id) return -1;\n        return 0;\n      }) : action.payload === 'asc' ? state.recipes.sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }) : state.recipes.sort((a, b) => {\n        if (a.name > b.name) return -1;\n        if (a.name < b.name) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        recipes: filterOrder\n      };\n    case 'FILTER_BY_HS':\n      const filterHs = action.payload === 'healthScore' ? state.recipes.sort((a, b) => {\n        if (a.id > b.id) return 1;\n        if (a.id < b.id) return -1;\n        return 0;\n      }) : action.payload === 'Low - High' ? state.recipes.sort((a, b) => {\n        if (a.healthScore > b.healthScore) return 1;\n        if (a.healthScore < b.healthScore) return -1;\n        return 0;\n      }) : state.recipes.sort((a, b) => {\n        if (a.healthScore > b.healthScore) return -1;\n        if (a.healthScore < b.healthScore) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        recipes: filterHs\n      };\n    default:\n      return state;\n  }\n}\n;\nexport default rootReducer;","map":{"version":3,"names":["initialState","recipes","allRecipes","diets","recipeDetail","rootReducer","state","action","type","payload","dietsFiltered","filter","e","includes","filterOrder","sort","a","b","id","name","filterHs","healthScore"],"sources":["C:/Users/Augusto/Desktop/PI Foods/PI-Food-main/client/src/reducer/reducer.js"],"sourcesContent":["\r\nconst initialState = {\r\n    recipes: [],\r\n    allRecipes: [],\r\n    diets: [],\r\n    recipeDetail: [],\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_RECIPES':\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                allRecipes: action.payload\r\n            }\r\n        case 'GET_RECIPE_BY_NAME':\r\n            return{\r\n                ...state,\r\n                recipes: action.payload\r\n            }\r\n        case 'GET_DIETS':\r\n            return{\r\n                ...state,\r\n                diets: action.payload\r\n            }\r\n        case 'GET_DETAIL':\r\n            return{\r\n                ...state,\r\n                recipeDetail: action.payload\r\n            }  \r\n        case 'CLEAR_DETAIL':\r\n            return{\r\n                ...state,\r\n                recipeDetail: action.payload\r\n            }      \r\n        case 'FILTER_BY_DIETS':\r\n            const allRecipes = state.allRecipes;\r\n            const dietsFiltered = action.payload ==='all' ? allRecipes : allRecipes.filter(e => e.diets.includes(action.payload));\r\n            return{\r\n                ...state,\r\n                recipes: dietsFiltered\r\n            }\r\n        case 'FILTER_BY_ORDER':\r\n            const filterOrder = action.payload === 'all'? \r\n            state.recipes.sort((a,b) =>{\r\n                if(a.id > b.id) return 1\r\n                if(a.id < b.id) return -1\r\n                return 0\r\n            })\r\n            :\r\n            action.payload === 'asc' ? \r\n            state.recipes.sort((a,b) =>{\r\n                if(a.name > b.name) return 1\r\n                if(a.name < b.name) return -1\r\n                return 0\r\n            }) \r\n            :\r\n            state.recipes.sort((a,b) =>{\r\n                if(a.name > b.name) return -1\r\n                if(a.name < b.name) return 1\r\n                return 0\r\n            })\r\n            return {\r\n                ...state,\r\n                recipes: filterOrder\r\n            }\r\n        case 'FILTER_BY_HS':\r\n            const filterHs = action.payload === 'healthScore'? \r\n            state.recipes.sort((a,b) =>{\r\n                if(a.id > b.id) return 1\r\n                if(a.id < b.id) return -1\r\n                return 0\r\n            })\r\n            :\r\n            action.payload === 'Low - High' ? \r\n            state.recipes.sort((a,b) =>{\r\n                if(a.healthScore > b.healthScore) return 1\r\n                if(a.healthScore < b.healthScore) return -1\r\n                return 0\r\n            }) \r\n            :\r\n            state.recipes.sort((a,b) =>{\r\n                if(a.healthScore > b.healthScore) return -1\r\n                if(a.healthScore < b.healthScore) return 1\r\n                return 0\r\n            })\r\n            return {\r\n                ...state,\r\n                recipes: filterHs\r\n            }      \r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}